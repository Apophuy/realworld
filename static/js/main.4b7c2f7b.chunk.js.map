{"version":3,"sources":["redux/reducers/auth.reducer.js","redux/constants/actionTypes.js","redux/reducers/form.reducer.js","redux/reducers/articles.reducer.js","redux/reducers/loader.reducer.js","redux/reducers/paginator.reducer.js","redux/reducers/root.reducer.js","serviceWorker.js","components/pagination/Page.js","components/PopupMessage.js","redux/actions/auth.action.js","redux/actions/articles.action.js","components/pagination/Paginator.js","redux/actions/paginator.action.js","components/articles/Article.js","components/articles/Articles.js","components/Loader.js","components/Home.js","redux/actions/loader.action.js","redux/actions/form.action.js","components/Login.js","components/Register.js","components/Menu.js","components/articles/ViewArticle.js","components/articles/EditArticle.js","components/App.js","index.js"],"names":["initialState","isAuthenticated","token","authReducer","state","action","type","payload","name","password","email","formReducer","articles","articlesCount","articlesLimit","articlesOffset","editingArticle","title","description","body","tagList","editing","articlesReducer","field","value","loading","loaderReducer","firstPage","activePage","paginationLength","paginatorReducer","rootReducer","combineReducers","auth","form","loader","paginator","Boolean","window","location","hostname","match","Page","isActive","pageNumber","changePageHandler","className","onClick","event","preventDefault","href","defaultProps","PopupMessage","text","M","toast","html","classes","API_ROOT","url","reg","user","logInUser","userToStorage","data","registeredUser","json","JSON","stringify","localStorage","setItem","signUpRegistaredUser","dispatch","a","userData","fetch","method","headers","request","status","userToken","message","articlesUrl","getArticlesUrl","func","getArticleUrl","articleSlug","getToken","userJson","getItem","parse","Paginator","changePage","changeArticlesList","changePaginatorList","pagesRange","range","changePagesRange","dir","Math","ceil","newFirstPage","map","page","key","connect","changeActivePage","getState","changeOffset","next","Article","article","createdAt","diffInMs","differenceInMilliseconds","Date","now","parseJSON","passedTimeSinceCreation","format","src","author","image","alt","username","tag","data-badge-caption","favoritesCount","slug","to","pathname","Loader","Home","getArticlesTitles","this","props","prevProps","currentPage","scrollTo","isLoading","length","Component","changeInput","Login","changeInputHandler","onChangeInput","target","id","onChange","htmlFor","onSignUpUser","Register","onRegisterUser","logOut","menuItems","clear","ViewArticle","modifyFavorite","deleteCuttentArticle","history","enableEditing","stateForEdit","updatedAt","favorited","bio","following","filter","item","currentArticle","changeFavoritHandler","aim","locale","ru","push","withRouter","Authorization","newArticle","newArticles","unionBy","changeFavorite","updatedArticles","setArticleToState","EditArticle","changeFieldHandler","changeField","test","split","submitHandler","editArticle","disableEditing","uploadUpdatedArticle","updateTextFields","onSubmit","placeholder","defaultValue","join","changeFormField","concat","publishArticle","cropArticles","updateArticle","App","autoSignIn","routes","path","component","exact","currentUser","error","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4b7c2f7b.chunk.js","sourcesContent":["import { LOG_IN, LOG_OUT } from '../constants/actionTypes';\n\nconst initialState = {\n  isAuthenticated: false,\n  token: '',\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        isAuthenticated: true,\n        token: action.payload,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","export const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const CHANGE_INPUT = 'CHANGE_INPUT';\n\nexport const GET_ARTICLES = 'GET_ARTICLES';\nexport const CHANGE_OFFSET = 'CHANGE_OFFSET';\nexport const CHANGE_FAVORITE = 'CHANGE_FAVORITE';\nexport const CHANGE_ARTICLE_FIELD = 'CHANGE_ARTICLE_FIELD';\nexport const PUBLISH_ARTICLE = 'PUBLISH_ARTICLE';\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\nexport const ON_EDITING_ARTICLE = 'ON_EDITING_ARTICLE';\nexport const OFF_EDITING_ARTICLE = 'OFF_EDITING_ARTICLE';\nexport const UPDATE_ARTICLE = 'UPDATE_ARTICLE';\nexport const SET_ARTICLE_TO_STATE = 'SET_ARTICLE_TO_STATE';\nexport const CLEAR_EDITING_ARTICLE = 'CLEAR_EDITING_ARTICLE';\n\nexport const CHANGE_FIRST_PAGE = 'CHANGE_FIRST_PAGE';\n\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const HIDE_LOADER = 'HIDE_LOADER';\n\nexport const CHANGE_ACTIVE_PAGE = 'CHANGE_ACTIVE_PAGE';\n","import { CHANGE_INPUT } from '../constants/actionTypes';\n\nconst initialState = {\n  name: '',\n  password: '',\n  email: '',\n};\n\nconst formReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_INPUT:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;\n","import {\n  GET_ARTICLES,\n  CHANGE_OFFSET,\n  CHANGE_FAVORITE,\n  CHANGE_ARTICLE_FIELD,\n  PUBLISH_ARTICLE,\n  DELETE_ARTICLE,\n  ON_EDITING_ARTICLE,\n  OFF_EDITING_ARTICLE,\n  UPDATE_ARTICLE,\n  SET_ARTICLE_TO_STATE,\n  CLEAR_EDITING_ARTICLE,\n} from '../constants/actionTypes';\n\nconst initialState = {\n  articles: [],\n  articlesCount: 0,\n  articlesLimit: 10,\n  articlesOffset: 0,\n  editingArticle: {\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n  },\n  editing: false,\n};\n\nconst articlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return {\n        ...state,\n        articles: action.payload.articles,\n        articlesCount: action.payload.articlesCount,\n      };\n    case CHANGE_OFFSET:\n      return {\n        ...state,\n        articlesOffset: action.payload,\n      };\n    case CHANGE_FAVORITE:\n      return {\n        ...state,\n        articles: action.payload,\n      };\n    case CHANGE_ARTICLE_FIELD:\n      return {\n        ...state,\n        editingArticle: {\n          ...state.editingArticle,\n          [action.payload.field]: action.payload.value,\n        },\n      };\n    case PUBLISH_ARTICLE:\n      return {\n        ...state,\n        articles: action.payload,\n        editingArticle: {\n          ...initialState.editingArticle,\n        },\n      };\n    case DELETE_ARTICLE:\n      return {\n        ...state,\n        articles: action.payload,\n      };\n    case ON_EDITING_ARTICLE:\n      return {\n        ...state,\n        editing: true,\n      };\n    case OFF_EDITING_ARTICLE:\n      return {\n        ...state,\n        editing: false,\n      };\n    case UPDATE_ARTICLE:\n      return {\n        ...state,\n        articles: action.payload,\n        editingArticle: {\n          ...initialState.editingArticle,\n        },\n      };\n    case SET_ARTICLE_TO_STATE:\n      return {\n        ...state,\n        editingArticle: action.payload,\n      };\n    case CLEAR_EDITING_ARTICLE:\n      return {\n        ...state,\n        editingArticle: initialState.editingArticle,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default articlesReducer;\n","import { SHOW_LOADER, HIDE_LOADER } from '../constants/actionTypes';\n\nconst initialState = {\n  loading: false,\n};\n\nconst loaderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case HIDE_LOADER:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import { CHANGE_ACTIVE_PAGE, CHANGE_FIRST_PAGE } from '../constants/actionTypes';\n\nconst initialState = {\n  firstPage: 1,\n  activePage: 1,\n  paginationLength: 10,\n};\n\nconst paginatorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_ACTIVE_PAGE:\n      return {\n        ...state,\n        activePage: action.payload,\n      };\n    case CHANGE_FIRST_PAGE:\n      return {\n        ...state,\n        firstPage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default paginatorReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth.reducer';\nimport formReducer from './form.reducer';\nimport articlesReducer from './articles.reducer';\nimport loaderReducer from './loader.reducer';\nimport paginatorReducer from './paginator.reducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  articles: articlesReducer,\n  loader: loaderReducer,\n  paginator: paginatorReducer,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Page = ({ isActive, pageNumber, changePageHandler }) => {\n  const onClick = (event) => {\n    event.preventDefault();\n    changePageHandler(pageNumber);\n  };\n  return (\n    <li className={isActive ? 'active' : 'waves-effect'}>\n      <a onClick={onClick} href={pageNumber}>\n        {pageNumber}\n      </a>\n    </li>\n  );\n};\nPage.defaultProps = {\n  isActive: false,\n  pageNumber: 1,\n};\n\nPage.propTypes = {\n  isActive: PropTypes.bool,\n  pageNumber: PropTypes.number,\n  changePageHandler: PropTypes.func.isRequired,\n};\nexport default Page;\n","const PopupMessage = (text) => {\n  if (window.M && text) {\n    window.M.toast({ html: text, classes: 'deep-orange darken-3' });\n  }\n  return null;\n};\n\nexport default PopupMessage;\n","import { LOG_IN, LOG_OUT } from '../constants/actionTypes';\nimport PopupMessage from '../../components/PopupMessage';\n\nexport const API_ROOT = 'https://conduit.productionready.io/api';\nconst url = {\n  auth: `${API_ROOT}/users/login`,\n  reg: `${API_ROOT}/users`,\n  user: `${API_ROOT}/user`,\n};\n\nexport const logInUser = (token) => ({\n  type: LOG_IN,\n  payload: token,\n});\n\nexport const logOutUser = () => ({\n  type: LOG_OUT,\n});\n\nconst userToStorage = (data) => {\n  const registeredUser = {\n    email: data.email,\n    password: data.password,\n    token: data.token,\n  };\n  const json = JSON.stringify(registeredUser);\n  localStorage.setItem('user', json);\n};\n\nexport const registerUser = (data) => async (dispatch) => {\n  try {\n    const userData = data;\n    const request = await fetch(url.reg, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ user: userData }),\n    });\n    const status = await request.status;\n    if (status === 200) {\n      const json = await request.json();\n      const userToken = json.user.token;\n      dispatch(logInUser(userToken));\n      userData.token = userToken;\n      PopupMessage('Пользователь зарегистрирован');\n      userToStorage(userData);\n    }\n    if (status === 422) {\n      PopupMessage('Такой пользователь уже существует');\n    }\n  } catch (error) {\n    PopupMessage(error.message);\n  }\n};\n// ? Получение имени пользователя из первой части\n// const getUserName = (req) => async (dispatch) => {\n//   const json = await req.json();\n//   const userName = json.user.username;\n//   dispatch(changeInput({ name: userName }));\n// };\n\nexport const signUpRegistaredUser = (data) => async (dispatch) => {\n  try {\n    const userData = data;\n    const request = await fetch(url.auth, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ user: userData }),\n    });\n    const status = await request.status;\n    if (status === 200) {\n      const json = await request.json();\n      const userToken = json.user.token;\n      dispatch(logInUser(userToken));\n      userData.token = userToken;\n      PopupMessage('Вы вошли в приложение');\n      userToStorage(userData);\n    }\n    if (status === 422) {\n      PopupMessage('Пароль не тот, а может пользователя не существует');\n    }\n  } catch (error) {\n    PopupMessage(error.message);\n  }\n};\n\nexport const autoLogin = () => (dispatch) => {\n  try {\n    const json = localStorage.getItem('user');\n    if (json) {\n      const currentUser = JSON.parse(json);\n      dispatch(signUpRegistaredUser(currentUser));\n    }\n  } catch (error) {\n    PopupMessage(error.message);\n  }\n};\n","import { unionBy } from 'lodash';\nimport { API_ROOT } from './auth.action';\nimport PopupMessage from '../../components/PopupMessage';\nimport {\n  GET_ARTICLES,\n  CHANGE_OFFSET,\n  CHANGE_FAVORITE,\n  CHANGE_ARTICLE_FIELD,\n  PUBLISH_ARTICLE,\n  DELETE_ARTICLE,\n  ON_EDITING_ARTICLE,\n  OFF_EDITING_ARTICLE,\n  SET_ARTICLE_TO_STATE,\n  UPDATE_ARTICLE,\n  CLEAR_EDITING_ARTICLE,\n} from '../constants/actionTypes';\nimport { showLoader, hideLoader } from './loader.action';\n\nlet articlesUrl = '';\n\nconst getArticlesUrl = (func) => {\n  const { articles } = func();\n  const { articlesLimit, articlesOffset } = articles;\n  articlesUrl = `${API_ROOT}/articles?limit=${articlesLimit}&offset=${articlesOffset}`;\n};\n\nexport const getArticles = () => async (dispatch, getState) => {\n  try {\n    getArticlesUrl(getState);\n    dispatch(showLoader());\n    const request = await fetch(articlesUrl);\n    const json = await request.json();\n    dispatch({\n      type: GET_ARTICLES,\n      payload: json,\n    });\n    dispatch(hideLoader());\n  } catch (error) {\n    dispatch(hideLoader());\n    PopupMessage(error.message);\n  }\n};\n\nexport const changeOffset = (pageNumber) => (dispatch, getState) => {\n  const { articles, paginator } = getState();\n  const { paginationLength } = paginator;\n  const { articlesLimit } = articles;\n  const offset = pageNumber * articlesLimit - paginationLength;\n  dispatch({\n    type: CHANGE_OFFSET,\n    payload: offset,\n  });\n};\n\nconst getArticleUrl = (articleSlug) => {\n  return `${API_ROOT}/articles/${articleSlug}/favorite`;\n};\n\nconst getToken = () => {\n  const userJson = localStorage.getItem('user');\n  const currentUser = JSON.parse(userJson);\n  const { token } = currentUser;\n  return token;\n};\n\nexport const changeFavorite = (articleSlug, aim) => async (dispatch, getState) => {\n  try {\n    const { articles } = getState();\n    const url = getArticleUrl(articleSlug);\n    const token = getToken();\n    let request;\n    if (aim === 'add') {\n      request = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n    } else {\n      request = await fetch(url, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      });\n    }\n    const status = await request.status;\n    if (status === 200) {\n      const json = await request.json();\n      const newArticle = json.article;\n      const newArticles = unionBy([newArticle], articles.articles, 'slug');\n      dispatch({\n        type: CHANGE_FAVORITE,\n        payload: newArticles,\n      });\n    }\n  } catch (error) {\n    PopupMessage(error.message);\n  }\n};\n\nexport const changeFormField = (field, value) => ({\n  type: CHANGE_ARTICLE_FIELD,\n  payload: {\n    field,\n    value,\n  },\n});\n\nexport const publishArticle = (article) => async (dispatch, getState) => {\n  try {\n    const { articles } = getState();\n    const token = getToken();\n    const request = await fetch(`${API_ROOT}/articles`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ article }),\n    });\n    const status = await request.status;\n    if (status === 200) {\n      const json = await request.json();\n      const newArticle = json.article;\n      const newArticles = [newArticle].concat(articles.articles);\n      dispatch({\n        type: PUBLISH_ARTICLE,\n        payload: newArticles,\n      });\n      PopupMessage('Статья опубликована');\n    }\n  } catch (error) {\n    PopupMessage(error.message);\n  }\n};\n\nexport const deleteArticle = (slug) => async (dispatch, getState) => {\n  try {\n    const { articles } = getState();\n    const token = getToken();\n    const url = `${API_ROOT}/articles/${slug}`;\n    const request = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    });\n    const status = await request.status;\n    if (status === 200) {\n      const updatedArticles = articles.articles.filter((article) => article.slug !== slug);\n      dispatch({\n        type: DELETE_ARTICLE,\n        payload: updatedArticles,\n      });\n      PopupMessage('Статья удалена');\n    }\n    if (status === 403) {\n      PopupMessage('Не твоя статья, не лезь куда не следует');\n    }\n  } catch (error) {\n    PopupMessage(error.message);\n  }\n};\n\nexport const onEditingArticle = () => ({\n  type: ON_EDITING_ARTICLE,\n});\n\nexport const offEditingArticle = () => ({\n  type: OFF_EDITING_ARTICLE,\n});\n\nexport const clearEditingArticle = () => ({\n  type: CLEAR_EDITING_ARTICLE,\n});\n\nexport const updateArticle = (article) => async (dispatch, getState) => {\n  try {\n    const { articles } = getState();\n    const { slug } = article;\n    const url = `${API_ROOT}/articles/${slug}`;\n    const token = getToken();\n    const request = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ article }),\n    });\n    const status = await request.status;\n    if (status === 403) {\n      PopupMessage('Нельзя пытаться редактировать чужую статью');\n      dispatch(clearEditingArticle());\n    }\n    if (status === 200) {\n      const json = await request.json();\n      const newArticle = json.article;\n      const cropArticles = articles.articles.filter((item) => item.slug !== slug);\n      const updatedArticles = [newArticle].concat(cropArticles);\n      dispatch({\n        type: UPDATE_ARTICLE,\n        payload: updatedArticles,\n      });\n    }\n  } catch (error) {\n    dispatch(offEditingArticle());\n    PopupMessage(error.message);\n  }\n};\n\nexport const setArticleToState = (article) => ({\n  type: SET_ARTICLE_TO_STATE,\n  payload: article,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from 'lodash';\nimport { connect } from 'react-redux';\nimport Page from './Page';\nimport { changeActivePage, changeFirstPage } from '../../redux/actions/paginator.action';\nimport { changeOffset } from '../../redux/actions/articles.action';\n\nconst Paginator = ({\n  state,\n  articlesCount,\n  articlesLimit,\n  changePage,\n  changeArticlesList,\n  changePaginatorList,\n}) => {\n  const { firstPage, activePage, paginationLength } = state;\n  const pagesRange = range(firstPage, firstPage + paginationLength);\n\n  const changePagesRange = (dir) => (event) => {\n    event.preventDefault();\n    if (dir === 'more') {\n      if (pagesRange[paginationLength - 1] === Math.ceil(articlesCount / articlesLimit)) {\n        return;\n      }\n      const newFirstPage = firstPage + paginationLength;\n      changePaginatorList(newFirstPage);\n      changePage(newFirstPage);\n      changeArticlesList(newFirstPage);\n    } else {\n      if (firstPage === 1) {\n        return;\n      }\n      const newFirstPage = firstPage - paginationLength;\n      changePaginatorList(newFirstPage);\n      changePage(newFirstPage);\n      changeArticlesList(newFirstPage);\n    }\n  };\n  const changePageHandler = (pageNumber) => {\n    changePage(pageNumber);\n    changeArticlesList(pageNumber);\n  };\n  return (\n    <ul className='pagination'>\n      <li className={firstPage === 1 ? 'disabled' : 'waves-effect'}>\n        <a href='#!' onClick={changePagesRange('less')}>\n          <i className='material-icons'>chevron_left</i>\n        </a>\n      </li>\n      {pagesRange.map((page) => (\n        <Page\n          key={page}\n          pageNumber={page}\n          isActive={page === activePage}\n          changePageHandler={changePageHandler}\n        />\n      ))}\n      <li\n        className={\n          pagesRange[paginationLength - 1] === Math.ceil(articlesCount / articlesLimit)\n            ? 'disabled'\n            : 'waves-effect'\n        }\n      >\n        <a href='#!' onClick={changePagesRange('more')}>\n          <i className='material-icons'>chevron_right</i>\n        </a>\n      </li>\n    </ul>\n  );\n};\nPaginator.defaultProps = {\n  state: {},\n};\n\nPaginator.propTypes = {\n  state: PropTypes.instanceOf(Object),\n  articlesCount: PropTypes.number.isRequired,\n  articlesLimit: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n  changeArticlesList: PropTypes.func.isRequired,\n  changePaginatorList: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  state: state.paginator,\n  articlesCount: state.articles.articlesCount,\n  articlesLimit: state.articles.articlesLimit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  changePage: (pageNumber) => dispatch(changeActivePage(pageNumber)),\n  changeArticlesList: (pageNumber) => dispatch(changeOffset(pageNumber)),\n  changePaginatorList: (next) => dispatch(changeFirstPage(next)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginator);\n","import { CHANGE_ACTIVE_PAGE, CHANGE_FIRST_PAGE } from '../constants/actionTypes';\n\nexport const changeActivePage = (pageNumber) => ({\n  type: CHANGE_ACTIVE_PAGE,\n  payload: pageNumber,\n});\n\nexport const changeFirstPage = (pageNumber) => ({\n  type: CHANGE_FIRST_PAGE,\n  payload: pageNumber,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { parseJSON, differenceInMilliseconds, format } from 'date-fns';\n\nconst Article = ({ article }) => {\n  const { createdAt } = article;\n  const diffInMs = differenceInMilliseconds(Date.now(), parseJSON(createdAt));\n  const passedTimeSinceCreation = format(diffInMs, 'dd дней hh часов mm минут');\n\n  return (\n    <li className='collection-item avatar margin--bottom'>\n      <img src={article.author.image} alt={article.author.username} className='circle' />\n      <span className='title'>\n        Название:&nbsp;<b>{article.title}</b>\n      </span>\n      <p>\n        Автор:&nbsp;<b>{article.author.username}</b>\n      </p>\n      <p>{`Создана: ${passedTimeSinceCreation} назад`}</p>\n      <span>\n        Теги:&nbsp;\n        {article.tagList.map((tag) => (\n          <span key={tag}>{`${tag} `}</span>\n        ))}\n      </span>\n      <div className='row s4 offset-s4 margin--top'>\n        <span\n          className='new badge orange left'\n          data-badge-caption=''\n        >{`Количество лайков: ${article.favoritesCount}`}</span>\n      </div>\n    </li>\n  );\n};\n\nArticle.propTypes = {\n  article: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Article;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Article from './Article';\n\nconst Articles = ({ articles }) => {\n  return (\n    <ul className='collection'>\n      {articles.map((article) => (\n        <Link key={article.slug} to={{ pathname: `/articles/${article.slug}`, state: article }}>\n          <Article article={article} />\n        </Link>\n      ))}\n    </ul>\n  );\n};\nArticles.propTypes = {\n  articles: PropTypes.instanceOf(Array).isRequired,\n};\nconst mapStateToProps = (state) => ({\n  articles: state.articles.articles,\n});\nexport default connect(mapStateToProps)(Articles);\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className='preloader-wrapper big active'>\n      <div className='spinner-layer spinner-red-only'>\n        <div className='circle-clipper left'>\n          <div className='circle' />\n        </div>\n        <div className='gap-patch'>\n          <div className='circle' />\n        </div>\n        <div className='circle-clipper right'>\n          <div className='circle' />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Paginator from './pagination/Paginator';\nimport Articles from './articles/Articles';\nimport Loader from './Loader';\nimport { getArticles } from '../redux/actions/articles.action';\n\nclass Home extends Component {\n  componentDidMount() {\n    const { getArticlesTitles } = this.props;\n    getArticlesTitles();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { getArticlesTitles, currentPage } = this.props;\n    if (currentPage !== prevProps.currentPage) {\n      getArticlesTitles();\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { articles, isLoading } = this.props;\n    const loader = (\n      <div className='row'>\n        <div className='col s6 offset-s3'>\n          <div className='center-align'>\n            <Loader />\n          </div>\n        </div>\n      </div>\n    );\n    return (\n      <>\n        {isLoading && loader}\n        {articles.length > 0 ? (\n          <div className='row'>\n            <div className='col s6 offset-s3'>\n              <Articles />\n              <div className='center-align'>\n                <Paginator />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className='row'>\n            <div className='col s4 offset-s4'>\n              <div className='center-align'>Статей пока нет</div>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nHome.defaultProps = {\n  articles: {},\n  isLoading: false,\n  currentPage: 1,\n};\n\nHome.propTypes = {\n  articles: PropTypes.instanceOf(Object),\n  getArticlesTitles: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  currentPage: PropTypes.number,\n};\nconst mapStateToProps = (state) => ({\n  articles: state.articles.articles,\n  isLoading: state.loader.loading,\n  currentPage: state.paginator.activePage,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getArticlesTitles: () => dispatch(getArticles()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { SHOW_LOADER, HIDE_LOADER } from '../constants/actionTypes';\n\nexport const showLoader = () => ({\n  type: SHOW_LOADER,\n});\n\nexport const hideLoader = () => ({\n  type: HIDE_LOADER,\n});\n","import { CHANGE_INPUT } from '../constants/actionTypes';\n\nconst changeInput = (field) => ({\n  type: CHANGE_INPUT,\n  payload: field,\n});\n\nexport default changeInput;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signUpRegistaredUser } from '../redux/actions/auth.action';\nimport changeInput from '../redux/actions/form.action';\n\nconst Login = (props) => {\n  const changeInputHandler = (event) => {\n    const { onChangeInput } = props;\n    const { value, name } = event.target;\n    onChangeInput({ [name]: value });\n  };\n  const signUpUserHandler = () => {\n    const { onSignUpUser } = props;\n    const user = {\n      email: props.state.email,\n      password: props.state.password,\n    };\n    onSignUpUser(user);\n  };\n  return (\n    <div className='row'>\n      <div className='col s4 offset-s4'>\n        <h3 className='center-align'>RealWorld</h3>\n        <div className='card light-blue darken-4'>\n          <div className='card-content white-text'>\n            <span className='card-title'>Вход</span>\n            <div>\n              <div className='input-field login__input'>\n                <input\n                  name='email'\n                  id='user_email'\n                  type='email'\n                  className='validate'\n                  onChange={changeInputHandler}\n                />\n                <label htmlFor='user_email'>Адрес электронной почты</label>\n              </div>\n              <div className='input-field  login__input'>\n                <input\n                  name='password'\n                  id='user_password'\n                  type='password'\n                  className='validate'\n                  onChange={changeInputHandler}\n                />\n                <label htmlFor='user_password'>Пароль</label>\n              </div>\n            </div>\n          </div>\n          <div className='card-action'>\n            <button\n              type='button'\n              className='btn waves-effect waves-light orange darken-2 button__margin--right'\n              onClick={signUpUserHandler}\n            >\n              <b>Войти</b>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nLogin.defaultProps = {\n  state: {\n    email: '',\n    password: '',\n  },\n};\n\nLogin.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  onSignUpUser: PropTypes.func.isRequired,\n  state: PropTypes.instanceOf(Object),\n};\n\nconst mapStateToProps = (state) => ({\n  state: state.form,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeInput: (field) => dispatch(changeInput(field)),\n  onSignUpUser: (data) => dispatch(signUpRegistaredUser(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { registerUser } from '../redux/actions/auth.action';\nimport changeInput from '../redux/actions/form.action';\n\nconst Register = (props) => {\n  const changeInputHandler = (event) => {\n    const { onChangeInput } = props;\n    const { value, name } = event.target;\n    onChangeInput({ [name]: value });\n  };\n\n  const registerHandler = () => {\n    const { onRegisterUser } = props;\n    const user = {\n      username: props.state.name,\n      email: props.state.email,\n      password: props.state.password,\n    };\n    onRegisterUser(user);\n  };\n\n  return (\n    <div className='row'>\n      <div className='col s4 offset-s4'>\n        <h3 className='center-align'>RealWorld</h3>\n        <div className='card light-blue darken-4'>\n          <div className='card-content white-text'>\n            <span className='card-title'>Регистрация</span>\n            <div>\n              <div className='input-field  login__input'>\n                <input\n                  name='name'\n                  id='user_name'\n                  type='text'\n                  className='validate'\n                  onChange={changeInputHandler}\n                />\n                <label htmlFor='user_name'>Имя пользователя</label>\n              </div>\n              <div className='input-field  login__input'>\n                <input\n                  name='email'\n                  id='user_email'\n                  type='email'\n                  className='validate'\n                  onChange={changeInputHandler}\n                />\n                <label htmlFor='user_email'>Адрес электронной почты</label>\n              </div>\n              <div className='input-field  login__input'>\n                <input\n                  name='password'\n                  id='user_password'\n                  type='password'\n                  className='validate'\n                  onChange={changeInputHandler}\n                />\n                <label htmlFor='user_password'>Пароль</label>\n              </div>\n            </div>\n          </div>\n          <div className='card-action'>\n            <button\n              type='button'\n              className='btn waves-effect waves-light green lighten-1 black-text button__margin--right'\n              onClick={registerHandler}\n            >\n              Регистрация\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nRegister.defaultProps = {\n  state: {\n    name: '',\n    password: '',\n    email: '',\n  },\n};\n\nRegister.propTypes = {\n  onChangeInput: PropTypes.func.isRequired,\n  state: PropTypes.instanceOf(Object),\n  onRegisterUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  state: state.form,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeInput: (field) => dispatch(changeInput(field)),\n  onRegisterUser: (user) => dispatch(registerUser(user)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { logOutUser } from '../redux/actions/auth.action';\n\nconst Menu = (props) => {\n  const { isAuthenticated } = props;\n  const exitHandler = () => {\n    const { logOut } = props;\n    logOut();\n    localStorage.clear();\n  };\n  let menuItems = (\n    <>\n      <li>\n        <NavLink to='/'>Главная страница</NavLink>\n      </li>\n      <li>\n        <NavLink to='/login'>Войти</NavLink>\n      </li>\n      <li>\n        <NavLink to='signup'>Зарегистрироваться</NavLink>\n      </li>\n    </>\n  );\n  if (isAuthenticated) {\n    menuItems = (\n      <>\n        <li>\n          <NavLink to='/'>Главная страница</NavLink>\n        </li>\n        <li>\n          <NavLink to='/add'>Создать статью</NavLink>\n        </li>\n        <li>\n          <NavLink onClick={exitHandler} to='/'>\n            Выход\n          </NavLink>\n        </li>\n      </>\n    );\n  }\n  return (\n    <nav>\n      <div className='nav-wrapper deep-orange darken-3'>\n        <ul className='left hide-on-med-and-down'>{menuItems}</ul>\n      </div>\n    </nav>\n  );\n};\n\nMenu.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  logOut: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  logOut: () => dispatch(logOutUser()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { ru } from 'date-fns/locale';\nimport { withRouter } from 'react-router-dom';\nimport {\n  changeFavorite,\n  deleteArticle,\n  onEditingArticle,\n  setArticleToState,\n} from '../../redux/actions/articles.action';\n\nconst ViewArticle = ({\n  modifyFavorite,\n  location,\n  articles,\n  deleteCuttentArticle,\n  history,\n  enableEditing,\n  stateForEdit,\n}) => {\n  const {\n    slug,\n    title,\n    description,\n    body,\n    tagList,\n    createdAt,\n    updatedAt,\n    favorited,\n    author,\n  } = location.state;\n  const { username, bio, image, following } = author;\n  const [currentArticle] = articles.filter((item) => item.slug === slug);\n\n  const changeFavoritHandler = (aim) => (event) => {\n    event.preventDefault();\n    modifyFavorite(slug, aim);\n  };\n\n  const deleteHandler = () => {\n    deleteCuttentArticle(slug);\n    history.push('/');\n  };\n\n  const goToUpdateButtonClick = () => {\n    enableEditing();\n    stateForEdit(currentArticle);\n    history.push(`/articles/${slug}/edit`);\n  };\n\n  return (\n    <div className='row'>\n      <div className='col s8 offset-s2 orange lighten-5 pad2'>\n        <div className='center-align'>\n          <h3>{`Название статьи: ${title}`}</h3>\n          <span>{`Описание статьи: ${description}`}</span>\n          <p>{`Содержание: ${body}`}</p>\n          <p>{`Тэги: ${tagList}`}</p>\n          <p>{`Дата создания: ${format(new Date(createdAt), 'dd MMMM yyyy', {\n            locale: ru,\n          })}`}</p>\n          <p>{`Дата обновления: ${format(new Date(updatedAt), 'HH:mm dd MMMM yyyy', {\n            locale: ru,\n          })}`}</p>\n          <p>{`Любимая статья? ${favorited}`}</p>\n          <div className='row'>\n            <div className='col s4 offset-s4 margin--top'>\n              <div className='center-align'>\n                <a href='#!' className='article__icons' onClick={changeFavoritHandler('add')}>\n                  <i className='material-icons left'>plus_one</i>\n                </a>\n                <span\n                  className='new badge orange left'\n                  data-badge-caption=''\n                >{`Количество лайков: ${currentArticle.favoritesCount}`}</span>\n                <a href='#!' className='article__icons' onClick={changeFavoritHandler('delete')}>\n                  <i className='material-icons left ml4'>delete</i>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className='card blue-grey darken-1'>\n            <div className='card-content white-text'>\n              <img src={image} alt='Картинка' className='article__image' />\n              <span className='card-title'>{`Автор: ${username}`}</span>\n              <p>{`Биография: ${bio}`}</p>\n              <p>{`Не знаю что за свойство: ${following}`}</p>\n            </div>\n          </div>\n          <div>\n            <button\n              className='btn waves-effect waves-light light-blue darken-3 button__margin--right'\n              type='button'\n              name='action'\n              onClick={goToUpdateButtonClick}\n            >\n              Редактировать\n              <i className='material-icons right'>edit</i>\n            </button>\n            <button\n              className='btn waves-effect waves-light deep-orange darken-3'\n              type='button'\n              name='action'\n              onClick={deleteHandler}\n            >\n              Удалить\n              <i className='material-icons right'>delete_forever</i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nViewArticle.defaultProps = {\n  location: {},\n  history: {},\n};\n\nViewArticle.propTypes = {\n  location: PropTypes.instanceOf(Object),\n  articles: PropTypes.instanceOf(Array).isRequired,\n  modifyFavorite: PropTypes.func.isRequired,\n  deleteCuttentArticle: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object),\n  enableEditing: PropTypes.func.isRequired,\n  stateForEdit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  articles: state.articles.articles,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  modifyFavorite: (articleSlug, aim) => dispatch(changeFavorite(articleSlug, aim)),\n  deleteCuttentArticle: (articleSlug) => dispatch(deleteArticle(articleSlug)),\n  enableEditing: () => dispatch(onEditingArticle()),\n  stateForEdit: (article) => dispatch(setArticleToState(article)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ViewArticle));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  changeFormField,\n  publishArticle,\n  offEditingArticle,\n  updateArticle,\n} from '../../redux/actions/articles.action';\nimport PopupMessage from '../PopupMessage';\n\nclass EditArticle extends Component {\n  componentDidMount() {\n    if (window.M) {\n      window.M.updateTextFields();\n    }\n  }\n\n  changeFieldHandler = (event) => {\n    const { value, name } = event.target;\n    const { changeField } = this.props;\n    if (name === 'tagList') {\n      const regexp = /^[\\d a-zа-яё]+$/gi;\n      if (!regexp.test(value) && value.length !== 0) {\n        PopupMessage('Желательно использовать только пробелы для разделения тэгов');\n      }\n      const arr = value.split(' ');\n      changeField(name, arr);\n    } else {\n      changeField(name, value);\n    }\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const {\n      editArticle,\n      submitHandler,\n      article,\n      history,\n      disableEditing,\n      uploadUpdatedArticle,\n    } = this.props;\n    if (!editArticle) {\n      submitHandler(article);\n      history.push('/');\n    } else {\n      uploadUpdatedArticle(article);\n      disableEditing();\n      history.push('/');\n    }\n  };\n\n  render() {\n    const { editArticle, article } = this.props;\n    const { title, description, body, tagList } = article;\n    return (\n      <div className='row'>\n        <div className='col s8 offset-s2 orange lighten-5 pad2'>\n          <div className='center-align'>\n            <h3>{editArticle ? 'Редактировать статью' : 'Создать статью'}</h3>\n            <form onSubmit={this.submitHandler}>\n              <div className='input-field'>\n                <i className='material-icons prefix'>title</i>\n                <input\n                  placeholder='Введите название статьи'\n                  id='article_title'\n                  type='text'\n                  className='validate'\n                  name='title'\n                  onChange={this.changeFieldHandler}\n                  defaultValue={editArticle ? title : ''}\n                />\n                <label htmlFor='article_title'>Название статьи</label>\n              </div>\n              <div className='input-field'>\n                <i className='material-icons prefix'>description</i>\n                <input\n                  placeholder='Введите описание статьи'\n                  id='article_description'\n                  type='text'\n                  className='validate'\n                  name='description'\n                  onChange={this.changeFieldHandler}\n                  defaultValue={editArticle ? description : ''}\n                />\n                <label htmlFor='article_description'>Описание статьи</label>\n              </div>\n              <div className='input-field'>\n                <i className='material-icons prefix'>mode_edit</i>\n                <textarea\n                  id='article_body'\n                  className='materialize-textarea'\n                  name='body'\n                  onChange={this.changeFieldHandler}\n                  defaultValue={editArticle ? body : ''}\n                />\n                <label htmlFor='article_body'>Текст статьи</label>\n              </div>\n              <div className='input-field'>\n                <i className='material-icons prefix'>tag_faces</i>\n                <input\n                  placeholder='Введите тэги для статьи'\n                  id='article_tagList'\n                  type='text'\n                  className='validate'\n                  name='tagList'\n                  onChange={this.changeFieldHandler}\n                  defaultValue={editArticle ? tagList.join(' ') : ''}\n                />\n                <label htmlFor='article_tagList'>Тэги статьи</label>\n              </div>\n              <button\n                className='btn waves-effect waves-light btn-large deep-orange darken-3 margin--bottom'\n                type='submit'\n              >\n                <i className='material-icons left'>cloud_upload</i>\n                <b>{editArticle ? 'Исправить' : 'Опубликовать'}</b>\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditArticle.defaultProps = {\n  history: {},\n};\n\nEditArticle.propTypes = {\n  article: PropTypes.instanceOf(Object).isRequired,\n  changeField: PropTypes.func.isRequired,\n  submitHandler: PropTypes.func.isRequired,\n  editArticle: PropTypes.bool.isRequired,\n  history: PropTypes.instanceOf(Object),\n  disableEditing: PropTypes.func.isRequired,\n  uploadUpdatedArticle: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  article: state.articles.editingArticle,\n  editArticle: state.articles.editing,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeField: (field, value) => dispatch(changeFormField(field, value)),\n  submitHandler: (article) => dispatch(publishArticle(article)),\n  disableEditing: () => dispatch(offEditingArticle()),\n  uploadUpdatedArticle: (article) => dispatch(updateArticle(article)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditArticle));\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport 'materialize-css';\nimport Home from './Home';\nimport Login from './Login';\nimport Register from './Register';\nimport Menu from './Menu';\nimport { autoLogin } from '../redux/actions/auth.action';\nimport ViewArticle from './articles/ViewArticle';\nimport EditArticle from './articles/EditArticle';\n\nclass App extends Component {\n  componentDidMount() {\n    const { autoSignIn } = this.props;\n    autoSignIn();\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    let routes = (\n      <>\n        <Route path='/login' component={Login} />\n        <Route path='/signup' component={Register} />\n        <Route exact path='/' component={Home} />\n        <Redirect to='/signup' />\n      </>\n    );\n\n    if (isAuthenticated) {\n      routes = (\n        <>\n          <Route exact path='/' component={Home} />\n          <Route path='/add' component={EditArticle} />\n          <Route path='/articles/:slug/edit' component={EditArticle} />\n          <Route exact path='/articles/:slug' component={ViewArticle} />\n          <Redirect to='/' />\n        </>\n      );\n    }\n    return (\n      <div className='container app__container'>\n        <Menu />\n        <Switch>{routes}</Switch>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  autoSignIn: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  autoSignIn: () => dispatch(autoLogin()),\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './redux/reducers/root.reducer';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport './index.css';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}